#include <stdio.h>
#include <string.h>

typedef struct {
    int id;
    char name[100];
    char lname[100];
    char position[100];
    int age;
    int shirt;
    int goal;
} player;

player max[100];
int play = 0;
int nextID = 1; // عداد ID دائم لا يتكرر أبداً

// ----------------- إضافة اللاعبين -----------------
void formations(){
    int n;
    printf("please enter how many player you want to enter: ");
    scanf("%d",&n);

    for(int i = 0 ; i < n ; i++){
        if (play >= 100){
            printf("sorry we don't have space\n");
            break;
        }

        printf("please enter the name of the player: ");
        scanf("%s",max[play].name);

        printf("please enter last name of the player: ");
        scanf("%s",max[play].lname);

        printf("please enter the age of the player: ");
        scanf("%d",&max[play].age);

        printf("please enter the position of the player [goalkeeper; defender; midfielder; forward]: ");
        scanf("%s",max[play].position);

        printf("please enter the number of the shirt: ");
        scanf("%d",&max[play].shirt);

        printf("please enter how many goals the player scored: ");
        scanf("%d",&max[play].goal);

        // تعيين ID دائم وفريد
        max[play].id = nextID;
        nextID++; // زيادة العدّاد للاعب القادم

        play++;
    }
}

// ----------------- فرز بالاسم -----------------
void Nbobble(player max[],int n){
    player tmp;
    for(int i = 0 ; i < n - 1; i++){
        for(int j = 0 ; j < n - i - 1;j++){
            if (strcmp(max[j].name,max[j+1].name)>0){
                  tmp = max[j];
                  max[j]=max[j + 1];
                  max[j + 1]=tmp;
            }
        }
    }
}

// ----------------- فرز بالعمر -----------------
void Agebobble(player max[],int n){
    player tmp;
    for(int i = 0 ; i < n - 1; i++){
        for(int j = 0 ; j < n - i - 1;j++){
            if ((max[j].age > max[j+1].age)){
                tmp = max[j];
                max[j]=max[j + 1];
                max[j + 1]=tmp;  
            }
        }
    }
}

// ----------------- البحث بالمركز -----------------
void srchpost(){
    int found = 0;
    char post[100];

    printf("Enter the position you want to search : ");
    scanf("%s",post);

    for(int i = 0 ; i < play ; i++){
        if(strcmp(max[i].position,post)==0){
            printf("ID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
                   max[i].id,max[i].name,max[i].lname,max[i].age,max[i].position,max[i].shirt,max[i].goal);
            found = 1;
        }
    }

    if (!found){
        printf("Sorry the position you entered is not defined.\n");
    }
}

// ----------------- عرض اللاعبين -----------------
void total(player max[], int n){
    for(int i = 0 ; i < n ; i++){
        printf("ID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
               max[i].id,max[i].name,max[i].lname,max[i].age,max[i].position,max[i].shirt,max[i].goal);
    } 
}

// ----------------- تعديل العمر -----------------
void editage(){
    int srch;
    printf("please enter the ID of the player: ");
    scanf("%d",&srch);

    int found = 0;
    for(int i = 0 ; i < play ; i++){
        if( max[i].id == srch ){
            found = 1;
            printf("Enter the new age: ");
            scanf("%d",&max[i].age);
            break;
        }
    }
    if (!found){
        printf("invalid id\n");
    }
}

// ----------------- تعديل المركز -----------------
void editpost(){
    int srch;
    printf("please enter the ID of the player: ");
    scanf("%d",&srch);

    int found = 0;
    for(int i = 0 ; i < play ; i++){
        if(max[i].id == srch){
            found = 1;
            printf("Enter the new position: ");
            scanf("%s",&max[i].position);
            break;
        }
    }
    if (!found){
        printf("invalid id\n");
    }
}

// ----------------- تعديل الأهداف -----------------
void editgoal(){
    int srch;
    printf("please enter the ID of the player: ");
    scanf("%d",&srch);

    int found = 0;
    for(int i = 0 ; i < play ; i++){
        if(max[i].id == srch){
            found = 1;
            printf("Enter the new goals: ");
            scanf("%d",&max[i].goal);
            break;
        }
    }
    if (!found){
        printf("invalid id\n");
    }
}

// ----------------- البحث بالاسم -----------------
void findname(){
    char name[100];
    printf("Please enter the name you want: ");
    scanf("%s",name);

    for(int i = 0 ; i < play ; i++){
        if (strcmp(max[i].name,name)==0){
            printf("player found \n");
            printf("ID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
                   max[i].id,max[i].name,max[i].lname,max[i].age,max[i].position,max[i].shirt,max[i].goal);
            return;
        }
    }
    printf ("the player not found \n");
}

// ----------------- البحث بالـ ID -----------------
int findid(){
    int id;
    printf("Please enter the ID you want: ");
    scanf("%d",&id);

    for(int i = 0 ; i < play ; i++){
        if (max[i].id==id){
            printf("player found \n");
            printf("ID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
                   max[i].id,max[i].name,max[i].lname,max[i].age,max[i].position,max[i].shirt,max[i].goal);
            return 1;
        }
    }
    printf ("the player not found \n");
    return 0;
}

// ----------------- حذف لاعب -----------------
void deleted(){
    int id;
    char yn[10];
    int found = 0;

    printf("Please enter the ID you want to delete: ");
    scanf("%d",&id);

    printf("Are you sure? enter yes to confirm: ");
    scanf("%s",yn);

    if(strcmp(yn, "yes")==0){
        for (int i = 0 ; i < play; i++){
            if (max[i].id==id){
                for (int j = i ; j < play - 1 ; j++){
                    max[j] = max[j+1];
                }
                play--;
                printf("Successful delete \n");
                found = 1;
                break;
            }
        }
        if (!found){
            printf("The player not found \n");
        }
    }else{
        printf("Ok, the player not deleted\n");
    }
}

// ----------------- إحصائيات -----------------
void Tplayers(){ printf("Total players is : %d\n", play); }

void moyenage(){
    if(play == 0){ printf("sorry we don't have players\n"); return; }
    int sum = 0;
    for (int i = 0 ; i < play ; i++){ sum += max[i].age; }
    printf("the average age is : %.2f\n",(float)sum/play);
}

int usergoals(){
    int g;
    printf("Please enter number of goals : ");
    scanf("%d",&g);
    return g;
}

void searchgoals(player max[],int n, int g ){
    int found=0;
    printf("the players with goals >= %d are:\n",g);
    for(int i = 0 ; i < n ; i++ ){
        if(max[i].goal >= g){
            printf("ID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
                   max[i].id,max[i].name,max[i].lname,max[i].age,max[i].position,max[i].shirt,max[i].goal);
            found =1;
        }
    }
    if(!found){ printf("No players found with goals >= %d\n",g); }
}


void topscore(player max[],int n){
    if(play == 0 ){
        printf("sorry we don't have players \n");
        return;
    }

    int top = 0;
    for(int i = 1 ; i < n ; i++){
        if(max[i].goal > max[top].goal){
            top = i;
        }
    }

    printf("Top scorer:\nID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
           max[top].id, max[top].name, max[top].lname, max[top].age, max[top].position, max[top].shirt, max[top].goal);
}

// ----------------- أصغر لاعب -----------------
void youngplayer(player max[],int n){
    if(play == 0){ printf("No players available.\n"); return; }

    int young = 0;
    for(int i = 1 ; i < n ; i++){
        if(max[i].age < max[young].age){
            young = i;
        }
    }

    printf("Youngest player:\nID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
           max[young].id, max[young].name, max[young].lname, max[young].age, max[young].position, max[young].shirt, max[young].goal);
}

// ----------------- أكبر لاعب -----------------
void oldplayer(player max[], int n){
    if(play == 0){ printf("No players available.\n"); return; }

    int old = 0;
    for(int i = 1; i < n; i++){
        if(max[i].age > max[old].age){
            old = i;
        }
    }

    printf("Oldest player:\nID : %d |\n| name: %s |\n| last name: %s |\n| age: %d |\n| position: %s |\n| number of shirt: %d |\n| goals: %d |\n",
           max[old].id, max[old].name, max[old].lname, max[old].age, max[old].position, max[old].shirt, max[old].goal);
}

// ----------------- قائمة الإحصائيات -----------------
void statisticsMenu() {
    int choice;
    int n = play; // عدد اللاعبين الحالي
    int g;

    mune:
    printf("\n===== Statistics Menu =====\n");
    printf("1 - Total players\n");
    printf("2 - Average age\n");
    printf("3 - Search players by goals\n");
    printf("4 - Youngest player\n");
    printf("5 - Oldest player\n");
    printf("6 - Top scorer\n");
    printf("7 - Exit\n");

    printf("Enter your choice: ");
    scanf("%d", &choice);

    switch (choice) {
        case 1: Tplayers(); goto mune;
        case 2: moyenage(); goto mune;
        case 3: g = usergoals(); searchgoals(max, n, g); goto mune;
        case 4: youngplayer(max,n); goto mune;
        case 5: oldplayer(max,n); goto mune;
        case 6: topscore(max,n); goto mune;
        case 7: printf("Exiting statistics menu...\n"); break;
        default: printf("Invalid choice\n"); goto mune;
    }
}

// ----------------- البرنامج الرئيسي -----------------
int main(){
    int choice;
    int show;

    mune:
    printf("======== Menu ========\n");
    printf("1 - Add a player\n");
    printf("2 - Show all players\n");
    printf("3 - Edit a player\n");
    printf("4 - Search a player\n");
    printf("5 - Delete a player\n");
    printf("6 - Statistics\n");
    printf("7 - Exit\n");

    printf("please enter your choice: ");
    scanf("%d",&choice);

    switch(choice) {
        case 1: formations(); goto mune;
        case 2:
            printf("View list by: [names:1, age:2, position:3]: ");
            scanf("%d",&show);
            if(show == 1){ Nbobble(max, play); total(max, play); goto mune; }
            else if(show == 2){ Agebobble(max, play); total(max, play); goto mune; }
            else if(show == 3){ srchpost(); goto mune; }
            else{ printf("invalid choice\n"); goto mune; }
        case 3:
            printf("Edit by ID [age:1, position:2, goals:3]: ");
            scanf("%d",&show);
            if(show == 1){ editage(); goto mune; }
            else if(show == 2){ editpost(); goto mune; }
            else if(show == 3){ editgoal(); goto mune; }
            else{ printf("invalid choice\n"); goto mune; }
        case 4:
            printf("Search by [name:1, id:2]: ");
            scanf("%d",&show);
            if(show == 1){ findname(); goto mune; }
            else if(show == 2){ findid(); goto mune; }
            else{ printf("invalid choice\n"); goto mune; }
        case 5: deleted(); goto mune;
        case 6: statisticsMenu(); goto mune;
        case 7: printf("See you later\n"); break;
        default: printf("invalid choice\n"); goto mune;
    }

    return 0;
}
